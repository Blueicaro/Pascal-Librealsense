var tipuesearch = {"pages": [
     {"title": "rs", "text": "Exposes librealsense functionality   ", "tags": "", "url": "rs.html"},
     {"title": "rs.RS2_API_MAJOR_VERSION", "text": "typedef double rs2_time_t; /**&lt; Timestamp format. units are milliseconds */ typedef long long rs2_metadata_type; /**&lt; Metadata attribute type is defined as 64 bit signed integer*/   ", "tags": "", "url": "rs.html#RS2_API_MAJOR_VERSION"},
     {"title": "rs.RS2_API_MINOR_VERSION", "text": "   ", "tags": "", "url": "rs.html#RS2_API_MINOR_VERSION"},
     {"title": "rs.RS2_API_PATCH_VERSION", "text": "   ", "tags": "", "url": "rs.html#RS2_API_PATCH_VERSION"},
     {"title": "rs.RS2_API_BUILD_VERSION", "text": "   ", "tags": "", "url": "rs.html#RS2_API_BUILD_VERSION"},
     {"title": "rs.RS2_API_VERSION", "text": "   ", "tags": "", "url": "rs.html#RS2_API_VERSION"},
     {"title": "rs.RS2_API_VERSION_STR", "text": "    ", "tags": "", "url": "rs.html#RS2_API_VERSION_STR"},
     {"title": "rs.RS2_API_FULL_VERSION_STR", "text": "    ", "tags": "", "url": "rs.html#RS2_API_FULL_VERSION_STR"},
     {"title": "rs_context", "text": "Exposes RealSense context functionality   ", "tags": "", "url": "rs_context.html"},
     {"title": "rs_context.RS2_PRODUCT_LINE_ANY", "text": "   ", "tags": "", "url": "rs_context.html#RS2_PRODUCT_LINE_ANY"},
     {"title": "rs_context.RS2_PRODUCT_LINE_ANY_INTEL", "text": "   ", "tags": "", "url": "rs_context.html#RS2_PRODUCT_LINE_ANY_INTEL"},
     {"title": "rs_context.RS2_PRODUCT_LINE_NON_INTEL", "text": "   ", "tags": "", "url": "rs_context.html#RS2_PRODUCT_LINE_NON_INTEL"},
     {"title": "rs_context.RS2_PRODUCT_LINE_D400", "text": "   ", "tags": "", "url": "rs_context.html#RS2_PRODUCT_LINE_D400"},
     {"title": "rs_context.RS2_PRODUCT_LINE_SR300", "text": "   ", "tags": "", "url": "rs_context.html#RS2_PRODUCT_LINE_SR300"},
     {"title": "rs_context.RS2_PRODUCT_LINE_L500", "text": "   ", "tags": "", "url": "rs_context.html#RS2_PRODUCT_LINE_L500"},
     {"title": "rs_context.RS2_PRODUCT_LINE_T200", "text": "   ", "tags": "", "url": "rs_context.html#RS2_PRODUCT_LINE_T200"},
     {"title": "rs_context.RS2_PRODUCT_LINE_DEPTH", "text": "   ", "tags": "", "url": "rs_context.html#RS2_PRODUCT_LINE_DEPTH"},
     {"title": "rs_context.RS2_PRODUCT_LINE_TRACKING", "text": "   ", "tags": "", "url": "rs_context.html#RS2_PRODUCT_LINE_TRACKING"},
     {"title": "rs_context.RS2_create_context", "text": "brief Creates RealSense context that is required for the rest of the API. param[in] api_version Users are expected to pass their version of \\c RS2_API_VERSION to make sure they are running the correct librealsense version. param[out] error If non-null, receives any error that occurs during this call, otherwise, errors are ignored. return Context object    ", "tags": "", "url": "rs_context.html#RS2_create_context"},
     {"title": "rs_context.RS2_delete_context", "text": "brief Frees the relevant context object. param[in] context Object that is no longer needed    ", "tags": "", "url": "rs_context.html#RS2_delete_context"},
     {"title": "rs_context.RS2_set_devices_changed_callback", "text": "/** * set callback to get devices changed events * these events will be raised by the context whenever new RealSense device is connected or existing device gets disconnected * \\param context Object representing librealsense session * \\param[in] callback function pointer to register as per-notifications callback * \\param[out] error if non-null, receives any error that occurs during this call, otherwise, errors are ignored */    ", "tags": "", "url": "rs_context.html#RS2_set_devices_changed_callback"},
     {"title": "rs_context.RS2_context_add_device", "text": "Create a new device and add it to the context \\param ctx The context to which the new device will be added \\param file The file from which the device should be created \\param[out] error If non-null, receives any error that occurs during this call, otherwise, errors are ignored     A pointer to a device that plays data from the file, or null in case of failure", "tags": "", "url": "rs_context.html#RS2_context_add_device"},
     {"title": "rs_context.RS2_context_add_software_device", "text": "Add an instance of software device to the context param ctx The context to which the new device will be added param dev Instance of software device to register into the context param[out] error If non-null, receives any error that occurs during this call, otherwise, errors are ignored    ", "tags": "", "url": "rs_context.html#RS2_context_add_software_device"},
     {"title": "rs_context.RS2_context_remove_device", "text": "Removes a playback device from the context, if exists \\param[in] ctx The context from which the device should be removed \\param[in] file The file name that was used to add the device \\param[out] error If non-null, receives any error that occurs during this call, otherwise, errors are ignored    ", "tags": "", "url": "rs_context.html#RS2_context_remove_device"},
     {"title": "rs_context.RS2_context_unload_tracking_module", "text": "Removes tracking module. function query_devices() locks the tracking module in the tm_context object. If the tracking module device is not used it should be removed using this function, so that other applications could find it. This function can be used both before the call to query_device() to prevent enabling tracking modules or afterwards to release them.    ", "tags": "", "url": "rs_context.html#RS2_context_unload_tracking_module"},
     {"title": "rs_context.RS2_query_devices", "text": "create a static snapshot of all connected devices at the time of the call \\param context Object representing librealsense session \\param[out] error if non-null, receives any error that occurs during this call, otherwise, errors are ignored \\return the list of devices, should be released by RS2_delete_device_list    ", "tags": "", "url": "rs_context.html#RS2_query_devices"},
     {"title": "rs_context.RS2_query_devices_ex", "text": "create a static snapshot of all connected devices at the time of the call \\param context Object representing librealsense session \\param product_mask Controls what kind of devices will be returned \\param[out] error if non-null, receives any error that occurs during this call, otherwise, errors are ignored \\return the list of devices, should be released by rs2_delete_device_list    ", "tags": "", "url": "rs_context.html#RS2_query_devices_ex"},
     {"title": "rs_context.RS2_create_device_hub", "text": "brief Creates RealSense device_hub . \\param[in] context The context for the device hub \\param[out] error If non-null, receives any error that occurs during this call, otherwise, errors are ignored. \\return Device hub object    ", "tags": "", "url": "rs_context.html#RS2_create_device_hub"},
     {"title": "rs_context.RS2_device_hub_wait_for_device", "text": "If any device is connected return it, otherwise wait until next RealSense device connects. Calling this method multiple times will cycle through connected devices \\param[in] ctx The context to creat the device \\param[in] hub The device hub object \\param[out] error If non-null, receives any error that occurs during this call, otherwise, errors are ignored. \\return device object    ", "tags": "", "url": "rs_context.html#RS2_device_hub_wait_for_device"},
     {"title": "rs_context.rs2_device_hub_is_device_connected", "text": "Checks if device is still connected \\param[in] hub The device hub object \\param[in] device The device \\param[out] error If non-null, receives any error that occurs during this call, otherwise, errors are ignored. \\return 1 if the device is connected, 0 otherwise    ", "tags": "", "url": "rs_context.html#rs2_device_hub_is_device_connected"},
     {"title": "rs_device", "text": "Exposes RealSense device functionality   ", "tags": "", "url": "rs_device.html"},
     {"title": "rs_device.RS2_get_device_count", "text": "Determines number of devices in a list. param[in] info_list The list of connected devices captured using RS2_query_devices param[out] error If non-null, receives any error that occurs during this call, otherwise, errors are ignored return Device count    ", "tags": "", "url": "rs_device.html#RS2_get_device_count"},
     {"title": "rs_device.RS2_delete_device_list", "text": "Deletes device list, any devices created using this list will remain unaffected. param[in] info_list List to delete    ", "tags": "", "url": "rs_device.html#RS2_delete_device_list"},
     {"title": "rs_device.RS2_create_device", "text": "Creates a device by index. The device object represents a physical camera and provides the means to manipulate it. param[in] info_list the list containing the device to retrieve param[in] index The zero based index of device to retrieve param[out] error If non-null, receives any error that occurs during this call, otherwise, errors are ignored return The requested device, should be released by RS2_delete_device    ", "tags": "", "url": "rs_device.html#RS2_create_device"},
     {"title": "rs_device.RS2_delete_device", "text": "Delete RealSense device param[in] device Realsense device to delete    ", "tags": "", "url": "rs_device.html#RS2_delete_device"},
     {"title": "rs_device.RS2_get_device_info", "text": "Retrieve camera specific information, like versions of various internal components. param[in] device The RealSense device param[in] info Camera info type to retrieve param[out] error If non-null, receives any error that occurs during this call, otherwise, errors are ignored return The requested camera info string, in a format specific to the device model    ", "tags": "", "url": "rs_device.html#RS2_get_device_info"},
     {"title": "rs_sensor", "text": "Exposes RealSense sensor functionality   ", "tags": "", "url": "rs_sensor.html"},
     {"title": "rs_sensor.Trs2_camera_info", "text": "brief Read-only strings that can be queried from the device. Not all information attributes are available on all camera types. This information is mainly available for camera debug and troubleshooting and should not be used in applications.    RS2_CAMERA_INFO_NAME  Friendly name  RS2_CAMERA_INFO_SERIAL_NUMBER  Device serial number  RS2_CAMERA_INFO_FIRMWARE_VERSION  Primary firmware version  RS2_CAMERA_INFO_RECOMMENDED_FIRMWARE_VERSION  Recommended firmware version  RS2_CAMERA_INFO_PHYSICAL_PORT  Unique identifier of the port the device is connected to (platform specific)  RS2_CAMERA_INFO_DEBUG_OP_CODE  If device supports firmware logging,// this is the command to send to get logs from firmware  RS2_CAMERA_INFO_ADVANCED_MODE  True iff the device is in advanced mode  RS2_CAMERA_INFO_PRODUCT_ID  Product ID as reported in the USB descriptor  RS2_CAMERA_INFO_CAMERA_LOCKED  True iff EEPROM is locked  RS2_CAMERA_INFO_USB_TYPE_DESCRIPTOR  Designated USB specification: USB2/USB3  RS2_CAMERA_INFO_PRODUCT_LINE  Device product line D400/SR300/L500/T200  RS2_CAMERA_INFO_ASIC_SERIAL_NUMBER  ASIC serial number  RS2_CAMERA_INFO_FIRMWARE_UPDATE_ID  Firmware update ID  RS2_CAMERA_INFO_IP_ADDRESS  IP address for remote camera.  RS2_CAMERA_INFO_COUNT  Number of enumeration values. Not a valid input: intended to be used in for-loops. ", "tags": "", "url": "rs_sensor.html#Trs2_camera_info"},
     {"title": "rs_types", "text": "Exposes RealSense structs   ", "tags": "", "url": "rs_types.html"},
     {"title": "rs_types.Trs2_context", "text": "   ", "tags": "", "url": "rs_types.Trs2_context.html"},
     {"title": "rs_types.Trs2_device_list", "text": "typedef struct rs2_device_list rs2_device_list;   ", "tags": "", "url": "rs_types.Trs2_device_list.html"},
     {"title": "rs_types.Trs2_device_info", "text": "typedef struct rs2_device_info rs2_device_info;   ", "tags": "", "url": "rs_types.Trs2_device_info.html"},
     {"title": "rs_types.Trs2_device", "text": "typedef struct rs2_device rs2_device;   ", "tags": "", "url": "rs_types.Trs2_device.html"},
     {"title": "rs_types.TUser", "text": "   ", "tags": "", "url": "rs_types.TUser.html"},
     {"title": "rs_types.Trs2_device_hub", "text": "typedef struct rs2_device_hub rs2_device_hub;   ", "tags": "", "url": "rs_types.Trs2_device_hub.html"},
     {"title": "rs_types.RS2_EXTENSION_UNKNOWN", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_UNKNOWN"},
     {"title": "rs_types.RS2_EXTENSION_DEBUG", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_DEBUG"},
     {"title": "rs_types.RS2_EXTENSION_INFO", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_INFO"},
     {"title": "rs_types.RS2_EXTENSION_MOTION", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_MOTION"},
     {"title": "rs_types.RS2_EXTENSION_OPTIONS", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_OPTIONS"},
     {"title": "rs_types.RS2_EXTENSION_VIDEO", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_VIDEO"},
     {"title": "rs_types.RS2_EXTENSION_ROI", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_ROI"},
     {"title": "rs_types.RS2_EXTENSION_DEPTH_SENSOR", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_DEPTH_SENSOR"},
     {"title": "rs_types.RS2_EXTENSION_VIDEO_FRAME", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_VIDEO_FRAME"},
     {"title": "rs_types.RS2_EXTENSION_MOTION_FRAME", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_MOTION_FRAME"},
     {"title": "rs_types.RS2_EXTENSION_COMPOSITE_FRAME", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_COMPOSITE_FRAME"},
     {"title": "rs_types.RS2_EXTENSION_POINTS", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_POINTS"},
     {"title": "rs_types.RS2_EXTENSION_DEPTH_FRAME", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_DEPTH_FRAME"},
     {"title": "rs_types.RS2_EXTENSION_ADVANCED_MODE", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_ADVANCED_MODE"},
     {"title": "rs_types.RS2_EXTENSION_RECORD", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_RECORD"},
     {"title": "rs_types.RS2_EXTENSION_VIDEO_PROFILE", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_VIDEO_PROFILE"},
     {"title": "rs_types.RS2_EXTENSION_PLAYBACK", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_PLAYBACK"},
     {"title": "rs_types.RS2_EXTENSION_DEPTH_STEREO_SENSOR", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_DEPTH_STEREO_SENSOR"},
     {"title": "rs_types.RS2_EXTENSION_DISPARITY_FRAME", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_DISPARITY_FRAME"},
     {"title": "rs_types.RS2_EXTENSION_MOTION_PROFILE", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_MOTION_PROFILE"},
     {"title": "rs_types.RS2_EXTENSION_POSE_FRAME", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_POSE_FRAME"},
     {"title": "rs_types.RS2_EXTENSION_POSE_PROFILE", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_POSE_PROFILE"},
     {"title": "rs_types.RS2_EXTENSION_TM2", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_TM2"},
     {"title": "rs_types.RS2_EXTENSION_SOFTWARE_DEVICE", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_SOFTWARE_DEVICE"},
     {"title": "rs_types.RS2_EXTENSION_SOFTWARE_SENSOR", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_SOFTWARE_SENSOR"},
     {"title": "rs_types.RS2_EXTENSION_DECIMATION_FILTER", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_DECIMATION_FILTER"},
     {"title": "rs_types.RS2_EXTENSION_THRESHOLD_FILTER", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_THRESHOLD_FILTER"},
     {"title": "rs_types.RS2_EXTENSION_DISPARITY_FILTER", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_DISPARITY_FILTER"},
     {"title": "rs_types.RS2_EXTENSION_SPATIAL_FILTER", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_SPATIAL_FILTER"},
     {"title": "rs_types.RS2_EXTENSION_TEMPORAL_FILTER", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_TEMPORAL_FILTER"},
     {"title": "rs_types.RS2_EXTENSION_HOLE_FILLING_FILTER", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_HOLE_FILLING_FILTER"},
     {"title": "rs_types.RS2_EXTENSION_ZERO_ORDER_FILTER", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_ZERO_ORDER_FILTER"},
     {"title": "rs_types.RS2_EXTENSION_RECOMMENDED_FILTERS", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_RECOMMENDED_FILTERS"},
     {"title": "rs_types.RS2_EXTENSION_POSE", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_POSE"},
     {"title": "rs_types.RS2_EXTENSION_POSE_SENSOR", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_POSE_SENSOR"},
     {"title": "rs_types.RS2_EXTENSION_WHEEL_ODOMETER", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_WHEEL_ODOMETER"},
     {"title": "rs_types.RS2_EXTENSION_GLOBAL_TIMER", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_GLOBAL_TIMER"},
     {"title": "rs_types.RS2_EXTENSION_UPDATABLE", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_UPDATABLE"},
     {"title": "rs_types.RS2_EXTENSION_UPDATE_DEVICE", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_UPDATE_DEVICE"},
     {"title": "rs_types.RS2_EXTENSION_L500_DEPTH_SENSOR", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_L500_DEPTH_SENSOR"},
     {"title": "rs_types.RS2_EXTENSION_TM2_SENSOR", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_TM2_SENSOR"},
     {"title": "rs_types.RS2_EXTENSION_AUTO_CALIBRATED_DEVICE", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_AUTO_CALIBRATED_DEVICE"},
     {"title": "rs_types.RS2_EXTENSION_COLOR_SENSOR", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_COLOR_SENSOR"},
     {"title": "rs_types.RS2_EXTENSION_MOTION_SENSOR", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_MOTION_SENSOR"},
     {"title": "rs_types.RS2_EXTENSION_FISHEYE_SENSOR", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_FISHEYE_SENSOR"},
     {"title": "rs_types.RS2_EXTENSION_DEPTH_HUFFMAN_DECODER", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_DEPTH_HUFFMAN_DECODER"},
     {"title": "rs_types.RS2_EXTENSION_SERIALIZABLE", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_SERIALIZABLE"},
     {"title": "rs_types.RS2_EXTENSION_FW_LOGGER", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_FW_LOGGER"},
     {"title": "rs_types.RS2_EXTENSION_AUTO_CALIBRATION_FILTER", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_AUTO_CALIBRATION_FILTER"},
     {"title": "rs_types.RS2_EXTENSION_DEVICE_CALIBRATION", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_DEVICE_CALIBRATION"},
     {"title": "rs_types.RS2_EXTENSION_CALIBRATED_SENSOR", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_CALIBRATED_SENSOR"},
     {"title": "rs_types.RS2_EXTENSION_HDR_MERGE", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_HDR_MERGE"},
     {"title": "rs_types.RS2_EXTENSION_SEQUENCE_ID_FILTER", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_SEQUENCE_ID_FILTER"},
     {"title": "rs_types.RS2_EXTENSION_MAX_USABLE_RANGE_SENSOR", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_MAX_USABLE_RANGE_SENSOR"},
     {"title": "rs_types.RS2_EXTENSION_DEBUG_STREAM_SENSOR", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_DEBUG_STREAM_SENSOR"},
     {"title": "rs_types.RS2_EXTENSION_CALIBRATION_CHANGE_DEVICE", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_CALIBRATION_CHANGE_DEVICE"},
     {"title": "rs_types.RS2_EXTENSION_COUNT", "text": "   ", "tags": "", "url": "rs_types.html#RS2_EXTENSION_COUNT"},
     {"title": "rs_types.rs2_get_error_message", "text": "    ", "tags": "", "url": "rs_types.html#rs2_get_error_message"},
     {"title": "rs_types.rs2_free_error", "text": "    ", "tags": "", "url": "rs_types.html#rs2_free_error"},
     {"title": "rs_types.Trs2_error", "text": "   ", "tags": "", "url": "rs_types.html#Trs2_error"},
     {"title": "rs_types.pRS2_error", "text": "   ", "tags": "", "url": "rs_types.html#pRS2_error"},
     {"title": "rs_types.pRS2_context", "text": "   ", "tags": "", "url": "rs_types.html#pRS2_context"},
     {"title": "rs_types.pRS2_device_list", "text": "Trs2_device_list = integer;   ", "tags": "", "url": "rs_types.html#pRS2_device_list"},
     {"title": "rs_types.pRS2_device_info", "text": "   ", "tags": "", "url": "rs_types.html#pRS2_device_info"},
     {"title": "rs_types.pRS2_device", "text": "   ", "tags": "", "url": "rs_types.html#pRS2_device"},
     {"title": "rs_types.pRS2_devices_changed_callback", "text": "typedef void (*rs2_devices_changed_callback_ptr)(rs2_device_list*, rs2_device_list*, void*);   ", "tags": "", "url": "rs_types.html#pRS2_devices_changed_callback"},
     {"title": "rs_types.RS2_devices_changed_callback", "text": "    ", "tags": "", "url": "rs_types.html#RS2_devices_changed_callback"},
     {"title": "rs_types.pUser", "text": "   ", "tags": "", "url": "rs_types.html#pUser"},
     {"title": "rs_types.pRs2_device_hub", "text": "   ", "tags": "", "url": "rs_types.html#pRs2_device_hub"}
]};
